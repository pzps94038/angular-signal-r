kind: pipeline
name: default

workspace:
  base: /src
  path: drone_chat

steps:
  - name: install-package
    image: node:16
    commands:
      - echo install package
      - npm ci
  - name: test
    image: node:16
    commands:
      - echo install Chrome
      - apt-get update -qq && apt-get install -qq --no-install-recommends chromium && apt-get clean && rm -rf /var/lib/apt/lists/* && ln -s /usr/bin/chromium /usr/bin/google-chrome
      - echo test
      - npm run test-ci
  - name: build
    image: node
    commands:
      - echo build
      - npm run build
  - name: zip
    image: lunagod/drone-zip
    settings:
      input:
        - dist/*
        - coverage
      output: Chat.zip
    when:
      branch:
        - main
      event:
        - push
  - name: artifact
    image: appleboy/drone-scp
    settings:
      host:
        from_secret: SCP_HOST
      username:
        from_secret: SCP_USER
      password:
        from_secret: SCP_PWD
      port: 22
      overwrite: true
      rm: true
      target: /file-server/Chat
      source: Chat.zip
    when:
      branch:
        - main
      event:
        - push
  - name: artifact upload finish
    image: node:16
    commands:
      - echo -e "\n
        ====================================================================\n
        ✅ fileUpload artifact in https://file-server.ronwebs.com/Chat\n
        ===================================================================="
    when:
      branch:
        - main
      event:
        - push
  - name: docker build && push
    image: plugins/docker
    settings:
      repo: pzps94038/chat
      username: pzps94038
      password:
        from_secret: DOCKER_PWD
      no_cache: true
      tags:
        - latest
        - main
    when:
      branch:
        - main
      event:
        - push
  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SCP_HOST
      username:
        from_secret: SCP_USER
      password:
        from_secret: SCP_PWD
      port: 22
      command_timeout: 2m
      script:
        - echo ======開始部署=======
        - docker stop chat || true &&
          docker rm chat || true &&
          docker pull pzps94038/chat:latest &&
          docker run -d -p 8085:80 --name chat --restart=always
          -e PORT=80
          pzps94038/chat:latest
        - echo ======部署完成=======
    when:
      branch:
        - main
      event:
        - push
  - name: notify
    image: drillster/drone-email
    settings:
      host: smtp.gmail.com
      username:
        from_secret: GMAIL_SENDER_EMAIL
      password:
        from_secret: GMAIL_PWD
      from:
        from_secret: GMAIL_SENDER_EMAIL
      recipients_only: true
      recipients:
        - pzps94038@yahoo.com.tw
    when:
      branch:
        - main
      event:
        - push
      status:
        - success
        - failure

trigger:
  branch:
    - main
    - develop
  event:
    - push
    - pull_request
    - tag
